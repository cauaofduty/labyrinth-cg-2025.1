===============================================
COMO COMPILAR E EXECUTAR O PROJETO LABIRINTO 3D
===============================================

Este guia explica os passos necessários para compilar e executar o projeto em diferentes sistemas operativos.

===============================================
WINDOWS (Recomendado - Usando vcpkg)
===============================================

---------------------------------
PASSO 1: INSTALAR AS FERRAMENTAS NECESSÁRIAS
---------------------------------

1. INSTALAR VISUAL STUDIO 2022 (Community Edition)
   - Baixe em: https://visualstudio.microsoft.com/vs/community/
   - Durante a instalação, selecione "Desktop development with C++"
   - Inclui: MSVC compiler, CMake, Windows SDK

2. INSTALAR GIT
   - Baixe em: https://git-scm.com/download/win
   - Instale com as configurações padrão

3. INSTALAR VCPKG (Gerenciador de Pacotes C++)
   - Abra o PowerShell como Administrador
   - Execute os comandos:
   
   cd C:\
   git clone https://github.com/Microsoft/vcpkg.git
   cd vcpkg
   .\bootstrap-vcpkg.bat
   .\vcpkg integrate install

4. INSTALAR AS BIBLIOTECAS DO PROJETO
   - No PowerShell (como Administrador), execute:
   
   .\vcpkg install glfw3:x64-windows
   .\vcpkg install glm:x64-windows
   .\vcpkg install freetype:x64-windows
   .\vcpkg install stb:x64-windows

   Detalhes das bibliotecas:
   - glfw3: Criação de janelas e gestão de inputs
   - glm: Matemática de vetores e matrizes
   - freetype: Renderização de fontes de texto
   - stb: Carregamento de imagens (já incluído no projeto)

---------------------------
PASSO 2: COMPILAR O PROJETO
---------------------------

MÉTODO 1: USANDO VISUAL STUDIO (Recomendado)

1. Abra o Visual Studio 2022
2. Selecione "Open a local folder"
3. Navegue até a pasta do projeto (que contém o CMakeLists.txt)
4. O Visual Studio detectará automaticamente o CMakeLists.txt
5. Aguarde a configuração automática (pode demorar alguns minutos)
6. Selecione "x64-Debug" ou "x64-Release" no dropdown
7. Pressione F5 ou clique em "Run" para compilar e executar

MÉTODO 2: USANDO LINHA DE COMANDO

1. Abra o PowerShell na pasta do projeto
2. Execute os comandos:

   # Remove pasta build antiga (se existir)
   if (Test-Path "build") { Remove-Item -Recurse -Force "build" }

   # Cria nova pasta build
   mkdir build
   cd build

   # Configura o CMake com vcpkg
   cmake .. -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake

   # Compila o projeto
   cmake --build . --config Debug

3. O executável será criado em: build\Debug\PROJETO_CG.exe

-------------------------
PASSO 3: EXECUTAR O JOGO
-------------------------

MÉTODO 1: PELO VISUAL STUDIO
- Pressione F5 ou clique em "Run" para compilar e executar automaticamente

MÉTODO 2: PELO EXPLORADOR DE ARQUIVOS
- Navegue até: build\Debug\
- Execute: PROJETO_CG.exe

MÉTODO 3: PELO POWERSHELL
- Na pasta build, execute:
  .\Debug\PROJETO_CG.exe

A janela do labirinto deverá abrir, e o jogo estará pronto a ser jogado.

===============================================
LINUX (Ubuntu/Debian)
===============================================

---------------------------------
PASSO 1: INSTALAR AS DEPENDÊNCIAS
---------------------------------

Abra um terminal (Ctrl+Alt+T) e execute:

sudo apt-get update && sudo apt-get install build-essential cmake libglfw3-dev libglm-dev libfreetype-dev

Detalhes do que está a ser instalado:
- build-essential: Compilador de C++ (g++) e ferramentas essenciais
- cmake: Ferramenta de compilação automatizada
- libglfw3-dev: Biblioteca para janelas e inputs
- libglm-dev: Biblioteca para matemática de vetores e matrizes
- libfreetype-dev: Biblioteca para renderização de fontes

---------------------------
PASSO 2: COMPILAR O PROJETO
---------------------------

1. Navegue até a pasta do projeto:
   cd /caminho/para/o/seu/PROJETO_CG/

2. Execute os comandos:
   
   # Remove pasta build antiga
   rm -rf build

   # Cria nova pasta build
   mkdir build
   cd build

   # Configura o CMake
   cmake ..

   # Compila o projeto
   make

-------------------------
PASSO 3: EXECUTAR O JOGO
-------------------------

No diretório build, execute:
./PROJETO_CG

===============================================
TROUBLESHOOTING (SOLUÇÃO DE PROBLEMAS)
===============================================

PROBLEMA: "vcpkg not found" no Windows
SOLUÇÃO: Certifique-se de que o vcpkg foi instalado em C:\vcpkg e que executou:
         .\vcpkg integrate install

PROBLEMA: "CMake not found" no Windows
SOLUÇÃO: Instale o Visual Studio 2022 com "Desktop development with C++" ou
         baixe o CMake separadamente de https://cmake.org/download/

PROBLEMA: "OpenGL not supported" ou erro de contexto
SOLUÇÃO: Atualize os drivers da placa gráfica (NVIDIA, AMD, Intel)

PROBLEMA: "DLL not found" no Windows
SOLUÇÃO: As DLLs necessárias estão na pasta build\Debug\ junto com o executável

PROBLEMA: Compilação falha no Linux
SOLUÇÃO: Verifique se todas as dependências foram instaladas:
         sudo apt-get update
         sudo apt-get install build-essential cmake libglfw3-dev libglm-dev libfreetype-dev

===============================================
INFORMAÇÕES ADICIONAIS
===============================================

ARQUITETURA SUPORTADA:
- Windows: x64 (64-bit)
- Linux: x64 (64-bit)

BIBLIOTECAS UTILIZADAS:
- OpenGL 3.3 Core
- GLFW 3.x (Gerenciamento de janelas)
- GLM (Matemática de vetores/matrizes)
- FreeType (Renderização de texto)
- GLAD (OpenGL Loader)
- tinyobjloader (Carregamento de modelos OBJ)
- stb_image (Carregamento de imagens)

REQUISITOS MÍNIMOS:
- Windows 10 ou superior
- Linux com kernel 3.x ou superior
- Placa gráfica com suporte OpenGL 3.3
- 4GB RAM
- 100MB espaço em disco

--------------------
CONTROLES
--------------------
- W, A, S, D: Mover a câmara
- Mouse: Olhar ao redor
- Clique Esquerdo: Interagir com baús e portal
- ESC: Fechar o programa

OBJETIVO DO JOGO:
- Encontre e abra 3 baús no labirinto
- Cada baú aberto acende uma luz dourada
- Após abrir todos os baús, o portal será ativado
- Use o portal para completar o jogo!
